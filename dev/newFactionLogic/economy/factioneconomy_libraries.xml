<?xml version="1.0" encoding="utf-8"?>
<mdscript name="FactionEconomy_Libraries" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../xsd/md.xsd">
  <cues>

    <library name="UpdateSectorNeighbourTable">
      <actions>
        <assert value="$Faction? and $SectorNeighbourTable?" text="'Variable $Faction or $SectorNeighbourTable not set. [Owen]'" break="1" />
        <do_if value="$Faction? and $SectorNeighbourTable?">
          <clear_table table="$SectorNeighbourTable" />

          <!--Find all sectors with stations owned by this faction-->
          <set_value name="$Sectors" exact="[]" />
          <find_station_by_true_owner name="$OwnedStations" faction="$Faction" space="player.galaxy" multiple="true" checkoperational="false">
            <match state="componentstate.wreck" negate="true" />
          </find_station_by_true_owner>
          <do_for_each in="$OwnedStations">
            <do_if value="not $Sectors.indexof.{loop.element.sector}">
              <append_to_list name="$Sectors" exact="loop.element.sector" />
            </do_if>
          </do_for_each>

          <do_for_each in="$Sectors" name="$Sector" reverse="true">
            <do_if value="not $SectorNeighbourTable.{$Sector}?">
              <set_value name="$SectorNeighbourTable.{$Sector}" exact="table[{0} = [$Sector]]" />
            </do_if>
            <do_elseif value="not $SectorNeighbourTable.{$Sector}.{0}?">
              <set_value name="$SectorNeighbourTable.{$Sector}.{0}" exact="[$Sector]" />
            </do_elseif>
            <do_else>
              <append_to_list name="$SectorNeighbourTable.{$Sector}.{0}" exact="$Sector" />
            </do_else>
            <!--
            Removed optimisation. Prior to the Terran DLC we had no sectors connected with a single super highway, so we could calculate the distance once and use it for both sectors.
            <remove_value name="$Sectors.{loop.index}" /> -->

            <find_sector_in_range distances="$DistanceTable" object="$Sector" maxdistance="5" multiple="true" />
            <do_for_each in="$Sectors" name="$OtherSector">
              <do_if value="$Sector != $OtherSector and $DistanceTable.{$OtherSector}?">
                <set_value name="$JumpDistance" exact="$DistanceTable.{$OtherSector}" />
                <!--Prepare the tables to store these two sectors-->
                <do_if value="not $SectorNeighbourTable.{$Sector}.{$JumpDistance}?">
                  <set_value name="$SectorNeighbourTable.{$Sector}.{$JumpDistance}" exact="[]" />
                </do_if>

                <do_if value="not $SectorNeighbourTable.{$OtherSector}?">
                  <set_value name="$SectorNeighbourTable.{$OtherSector}" exact="table[{$JumpDistance} = []]" />
                </do_if>
                <do_elseif value="not $SectorNeighbourTable.{$OtherSector}.{$JumpDistance}?">
                  <set_value name="$SectorNeighbourTable.{$OtherSector}.{$JumpDistance}" exact="[]" />
                </do_elseif>

                <append_to_list name="$SectorNeighbourTable.{$Sector}.{$JumpDistance}" exact="$OtherSector" />
              </do_if>
            </do_for_each>
          </do_for_each>
          <remove_value name="$Sectors" />
          <remove_value name="$OwnedStations" />
          <remove_value name="$DistanceTable" />
        </do_if>
      </actions>
    </library>

    <!--Note: Does not check if faction has a valid module production definition-->
    <library name="Check_Production_Location_Suitablility" purpose="run_actions">
      <params>
        <param name="Sector" />
        <param name="Ware" />
        <param name="Faction" />
      </params>
      <actions>
        <do_if value="$Ware == ware.energycells and $Sector.sunlight lt 0.4f">
          <return value="false" />
        </do_if>
        <do_if value="$Sector.containsthewave">
          <get_module_definition reference="$ProductionDefinition" ware="$Ware" faction="$Faction" tags="tag.condensate" />
          <do_if value="not $ProductionDefinition">
            <return value="false" />
          </do_if>
        </do_if>
        <return value="true" />
      </actions>
    </library>

  </cues>
</mdscript>