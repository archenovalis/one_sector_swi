<?xml version="1.0" encoding="utf-8"?>
<mdscript name="FactionLogic_Fetch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../xsd/md.xsd">
  <cues>

    <!--signal_cue_instantly
    param: [$ResultCue, $Points, $Faction, $Commandeerable, $AdditionalJobTags]
    Result saved to $ResultCue.$Suitable_Jobs-->
    <cue name="Get_Military_Jobs" instantiate="true" namespace="static">
      <conditions>
        <event_cue_signalled />
      </conditions>
      <actions>
        <get_threat_score result="$Ship_XL_Threat" class="class.ship_xl" purpose="purpose.fight" />
        <get_threat_score result="$Ship_L_Threat" class="class.ship_l" purpose="purpose.fight" />
        <get_threat_score result="$Ship_M_Threat" class="class.ship_m" purpose="purpose.fight" />
        <get_threat_score result="$Ship_S_Threat" class="class.ship_s" purpose="purpose.fight" />
        <set_value name="$MilitaryTags" exact="[tag.military, tag.factionlogic]" />
        <!--Preferably order list in decending points value-->
        <set_value name="$MilitaryJobDefinitions" exact="[
                     table[$Points = $Ship_XL_Threat, $Class = class.ship_xl, $Tags = $MilitaryTags],
                     table[$Points = $Ship_L_Threat,  $Class = class.ship_l,  $Tags = $MilitaryTags],
                     table[$Points = $Ship_M_Threat,  $Class = class.ship_m,  $Tags = $MilitaryTags],
                     table[$Points = $Ship_S_Threat,  $Class = class.ship_s,  $Tags = $MilitaryTags]]" />
        <run_actions ref="md.FactionLogic_Libraries.Get_Suitable_Jobs_Lib" result="event.param.{1}.$Suitable_Jobs">
          <param name="JobDefinitions" value="$MilitaryJobDefinitions" />
          <param name="Points" value="event.param.{2}" />
          <param name="Faction" value="event.param.{3}" />
          <param name="Commandeerable" value="@event.param.{4}" />
          <param name="AdditionalTags" value="@event.param.{5}" />
        </run_actions>
      </actions>
      <!--To patch, clear value $MilitaryJobDefinitions-->
    </cue>

    <!--signal_cue_instantly
    param: [$ResultCue, $Points, $Faction, $Commandeerable, $AdditionalJobTags]
    Result saved to $ResultCue.$Suitable_Jobs-->
    <cue name="Get_Scout_Jobs" instantiate="true" namespace="static">
      <conditions>
        <event_cue_signalled />
      </conditions>
      <actions>
        <get_threat_score result="$Ship_XL_Threat" class="class.ship_xl" purpose="purpose.fight" />
        <get_threat_score result="$Ship_L_Threat" class="class.ship_l" purpose="purpose.fight" />
        <get_threat_score result="$Ship_M_Threat" class="class.ship_m" purpose="purpose.fight" />
        <get_threat_score result="$Ship_S_Threat" class="class.ship_s" purpose="purpose.fight" />
        <set_value name="$ScoutTags" exact="[tag.scout, tag.factionlogic]" />
        <!--Preferably order list in decending points value-->
        <set_value name="$ScoutJobDefinitions" exact="[
                     table[$Points = $Ship_XL_Threat, $Class = class.ship_xl, $Tags = $ScoutTags],
                     table[$Points = $Ship_L_Threat,  $Class = class.ship_l,  $Tags = $ScoutTags],
                     table[$Points = $Ship_M_Threat,  $Class = class.ship_m,  $Tags = $ScoutTags],
                     table[$Points = $Ship_S_Threat,  $Class = class.ship_s,  $Tags = $ScoutTags]]" />
        <run_actions ref="md.FactionLogic_Libraries.Get_Suitable_Jobs_Lib" result="event.param.{1}.$Suitable_Jobs">
          <param name="JobDefinitions" value="$ScoutJobDefinitions" />
          <param name="Points" value="event.param.{2}" />
          <param name="Faction" value="event.param.{3}" />
          <param name="Commandeerable" value="@event.param.{4}" />
          <param name="AdditionalTags" value="@event.param.{5}" />
        </run_actions>
      </actions>
      <!--To patch, clear value $ScoutJobDefinitions-->
    </cue>
  </cues>
</mdscript>