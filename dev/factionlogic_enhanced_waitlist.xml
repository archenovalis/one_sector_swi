<?xml version="1.0" encoding="utf-8"?>
<mdscript name="FactionLogic_Enhanced_Waitlist" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../xsd/md.xsd">
  <cues>
    <!-- Variables
      $Enhanced_Scores = table[
        $weigtedEconomy = float
        $weigtedMilitary = float
        $weigtedIndustry = float
      ]

      (set by process station; static)
      $Enhanced_IndustryBuildSlots = table[
        $s = int
        $m = int
        $l = int
        $xl = int
        $xxl = int
        $cv = int
        $planet = int
      ]

      (when build queue has resources available to initiate a waiting build but not build slots available; dynamic)
      $Enhanced_IndustryBuildShortage = table[
        $s = int
        $m = int
        $l = int
        $xl = int
        $xxl = int
        $station = int
      ]

      $Enhanced_BuildPriority = table[
        $Buildmodules = table[
          $wharf = float
          $l = float
          $xl = float
          $xxl = float
        ]
        $Productionmodules = table[
          {$product} = float
        ]
        $Ships = table[
          $fight = float
          $mine = float
          $trade = float
          $build = float 
        ]
      ]
    -->

    <library name="Request">
      <!-- notes:
        intercepts build request from vanilla factionlogic
        ships:
          needs to store requested job, home space, anything else relevant

        stations:
          needs to store 
      -->
      <actions>
        <!-- save resource requirement of ship -->
        <!-- ship purpose determines waitlist -->

      </actions>
    </library>

    <library name="Run">
      <!-- notes:
        use weighted scores to assign build chance (chance = score / totalscores)
        find available slots check all build stations

        $Enhanced_BuildPriority = table[
          $Stations = table[
            $Buildmodules = table[          (Calculate_Ship_Building_Score)
              $wharf = float
              $l = float
              $xl = float
              $xxl = float
            ]
            $Productionmodules = table[     (
              {$resource}
            ]
          ]
          $Ships = table[
            $Mine = table[                  (Process_Efficiencies)
              $score = float                    (average of gas and solid score)
              $Gas = table[
                $score = float                  (average of all gas scores)
                {$resource} = float             (efficiency * demandVolume / maxDemandVolume)
              ]
              $Solid = table[
                $score = float                  (average of all solid scores)
                {$resource} = float             (efficiency * demandVolume / maxDemandVolume)
              ]
            ]
            $Trade = table[                 (Process_Efficiencies)
              $score = float                    (average of all trade scores)
              {$resource} = float               (efficiency * demandVolume / maxDemandVolume)
            ] 
            $build = float                  (Calculate_Station_Building_Score | )
            $fight = float                  (Calculate_Raw_Military_Score | $totalThreatScore / $desiredThreatScore = $Enhanced_Scores.$rawMilitary)
          ]
        ]
      ]
      -->
      <actions>
        <!-- ships -->
        <!-- waitlist chance -->
        <!-- use weighted scores to assign build chance (chance = score / totalscores)
          trade: transportation efficiency (economy)
          mine: mining efficiency (resource based?) (economy)
          fight: desired threatscores? (military)
          build: construction score (industry)
        -->

        <!-- process each $Enhanced_BuildStation-->
        <set_value name="$stationslots" exact="table[]" />
        <do_for_each name="$station" in="$Enhanced_BuildStations">
          <set_value name="$on_hand" exact="$Enhanced_Stations.{$station}.$On_hand.clone" />
          <set_value name="$stationslots.{$station}" exact="table[]" />
          <set_value name="$slots" exact="$stationslots.{$station}" />

          <!-- get available slots -->
          <do_for_each name="$module" in="$station.buildmodules">
            <do_for_each name="$processor" in="$module.freebuildprocessors">
              <do_for_each name="$class" in="[class.size_s, class.size_m, class.size_l, class.size_xl]">
                <do_if value="$class == class.size_xl and $module.dock.{tag.dock_xxl}">
                  <set_value name="$slots.{tag.dock_xxl}" operation="add" exact="1" />
                </do_if>
                <do_else>
                  <set_value name="$slots.{$class}" operation="add" exact="$processor.canbuildclass.{$class}" />
                </do_else>
              </do_for_each>
            </do_for_each>
          </do_for_each>
        </do_for_each>

        <do_while value="true">
          <do_any>
            <set_value name="$waitlist" exact="$waitlistFight" weight="$chanceFight" />
            <set_value name="$waitlist" exact="$waitlistMine" weight="$chanceMine" />
            <set_value name="$waitlist" exact="$waitlistTrade" weight="$chanceTrade" />
            <set_value name="$waitlist" exact="$waitlistBuild" weight="$chanceBuild" />
          </do_any>
          <!-- process waitlist until resources are exhausted or all slots used-->
          <do_for_each name="$ship" in="$waitlist">
            <!-- if slot matches ships and resources available, then
              reduce resources by assigned ship
              reduce slot by assigned ship -->
          </do_for_each>
          <set_value name="$sanity" operation="add" exact="1" />
          <do_if value="$sanity == 25 ">
            <break />
          </do_if>
        </do_while>
        <!-- slots remaining and valid ships in waitlist, add to not enough resources -->

        <!-- how many ship builds started and cost (modifies demand)
          how many build slots are inactive vs waitlist = not enough resources (not enough production) -->

        <!-- add number remaining in waitlist minus resource shortage to these:
            $Enhanced_IndustryBuildShortage = table[
              $s = int
              $m = int
              $l = int
              $xl = int
              $xxl = int
              $station = int
            ]
          -->

        <!-- -->


        <!-- stations -->
        <!-- waitlist chance -->
        <!-- use weighted scores to assign build chance (chance = score / totalscores)
          Type:
            production: (resource based?) (economy)
            defense: desired threatscores? (military)
            build: ship building score (industry)
          Location: 
            claim/contest sector (state = EXPANSION)
          
          empire resources on-hand, not at buildstations -->
      </actions>
    </library>
  </cues>
</mdscript>