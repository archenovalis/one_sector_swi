<?xml version="1.0" encoding="utf-8"?>
<diff xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../xsd/mddiff.xsd">
  <replace sel="//mdscript/cues">
    <cues>
      <cue name="OneSector_Player_Start" module="one_player">
        <conditions>
          <event_cue_signalled cue="md.Setup.GameStart" />
        </conditions>
        <delay exact="5s" />
        <actions>
          <set_value name="$InitialMap" exact="[
            macro.swi_clustercrustai_sector001_macro
          ]" />

          <!-- Add player's ships to universe -->
          <set_job_active job="'player_construction_vessel_l'" />
          <set_job_active job="'player_construction_vessel_l_focused'" />
          <set_job_active job="'player_construction_trader_l_critical'" />
          <set_job_active job="'player_construction_trader_m_critical'" />

          <!-- Add player's stations to universe -->
          <find_sector name="$sector" macro="macro.swi_clustercrustai_sector001_macro" />

          <get_module_set_macro result="$StationMacro" race="faction.galempire.primaryrace" type="'factory'" />
          <create_station rawname="'Defense Station'"
            name="$station"
            state="componentstate.operational"
            sector="$sector"
            owner="faction.galempire" macro="$StationMacro"
            constructionplan="'imperial_defence'">
            <safepos space="$sector" allowyaxis="false" includeplotbox="true" />
          </create_station>
          <set_loadout_level object="$station" exact="1" />
          <signal_objects object="player.galaxy" param="'init station'" param2="$station"
            param3="false" />
          <signal_cue_instantly cue="Give_Ownership" />
        </actions>
        <cues>
          <cue name="Give_Ownership">
            <conditions>
              <event_cue_signalled />
            </conditions>
            <delay exact="1s" />
            <actions>
              <set_job_active job="'player_construction_vessel_l'" activate="false" />
              <set_job_active job="'player_construction_vessel_l_focused'" activate="false" />
              <set_job_active job="'player_construction_trader_l_critical'" activate="false" />
              <set_job_active job="'player_construction_trader_m_critical'" activate="false" />
              <find_object name="$objects" space="$sector" multiple="true" class="class.station" />
              <find_ship_by_true_owner name="$objects" faction="faction.galempire" space="$sector" multiple="true" append="true" />
              <do_for_each name="$object" in="$objects">
                <do_if value="$object.class.ship">
                  <run_actions ref="md.LIB_Generic.TransferShipOwnership">
                    <param name="Ship" value="$object" />
                    <param name="Faction" value="faction.player" />
                  </run_actions>
                  <create_order id="'Wait'" object="$object" immediate="true" override="true" />
                </do_if>
                <do_if value="$object.class.station">
                  <run_actions ref="md.LIB_Generic.TransferStationOwnership">
                    <param name="Station" value="$object" />
                    <param name="Faction" value="faction.player" />
                  </run_actions>
                </do_if>
              </do_for_each>

              <!-- add all blueprints -->
              <get_ware_definition faction="[
                faction.galempire,
                faction.newrepublic,
                faction.ascendancy,
                faction.anoat,
                faction.corporate,
                faction.commerceguild,
                faction.mandodw,
                faction.huttcartel
                faction.miningguild,
                faction.tagge,
                faction.tradefederation,
                faction.baobab,
                faction.twinsuns,
                faction.moncal,
                faction.transgalmeg,
                faction.incom,
                faction.rendili,
                faction.hoersh,
                faction.sienar,
                faction.corellia,
                faction.kuat
              ]" result="$all" />
              <add_blueprints wares="$all" />

              <!-- add planetary tradestation -->
              <run_actions ref="md.LIB_Generic.GetPositionBetweenObjects" result="$posrot">
                <param name="FromObject" value="$sector" />
                <param name="ToObject" value="$sector.cluster.planets.{1}" />
                <param name="Distance01" value="0" />
                <param name="Distance_Absolute" value="100km" />
              </run_actions>
              <get_module_set_macro result="$StationMacro" race="faction.galempire.primaryrace" type="'tradingstation'" />
              <create_station rawname="'{20777,3002}'"
                name="$station"
                state="componentstate.operational"
                sector="$sector"
                owner="faction.player" macro="$StationMacro"
                constructionplan="'planetary_tradestation'">
                <safepos value="$posrot.$position" space="$sector" allowyaxis="false" includeplotbox="true" />
              </create_station>
              <set_loadout_level object="$station" exact="1" />
              <signal_objects object="player.galaxy" param="'init station'" param2="$station"
                param3="false" />
              <signal_cue_instantly cue="md.SW_planetaryaid.AddStation" param="table[$Station = $station, $Prefill = true]" />
            </actions>
          </cue>
        </cues>
      </cue>
    </cues>
  </replace>
</diff>