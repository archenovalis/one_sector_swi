<?xml version="1.0" encoding="utf-8"?>
<diff xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../xsd/mddiff.xsd">
  <replace sel="//mdscript/cues">
    <cues>
      <cue name="OneSector_Player_Start" module="one_player">
        <conditions>
          <event_cue_signalled cue="md.Setup.GameStart" />
        </conditions>
        <delay exact="1ms" />
        <actions>
          <set_value name="$DebugChance" exact="100" />
          <set_value name="$InitialMap" exact="[
            macro.swi_clustercrustai_sector001_macro
          ]" />

          <!-- add all blueprints -->
          <do_for_each name="$faction" in="[
            faction.galempire, faction.newrepublic,     faction.ascendancy,
            faction.anoat,     faction.corporate,       faction.commerceguild,
            faction.mandodw,   faction.huttcartel,      faction.miningguild,
            faction.tagge,     faction.tradefederation, faction.baobab,
            faction.twinsuns,  faction.moncal,          faction.transgalmeg,
            faction.incom,     faction.rendili,         faction.hoersh,
            faction.sienar,    faction.corellia,        faction.kuat
          ]">
            <get_ware_definition result="$defs" faction="$faction" />
          </do_for_each>
          <add_blueprints wares="$defs" />

          <find_sector name="$sector" macro="macro.swi_clustercrustai_sector001_macro" />

          <!-- Add player's defense station -->
          <set_value name="$DistanceFromSectorOrigin" exact="450km" />
          <set_value name="$toObject_pos" exact="$sector.cluster.world.{$sector.cluster.planets.{1}}.position.{$sector}" />
          <include_actions ref="md.One_Sector.GetPositionBetweenSectorAndObject" />
          <get_module_set_macro result="$StationMacro" race="faction.galempire.primaryrace" type="'factory'" />
          <create_station rawname="'Defense Station'"
            name="$station"
            state="componentstate.operational"
            sector="$sector"
            owner="faction.civilian" macro="$StationMacro"
            constructionplan="'imperial_defence'">
            <safepos value="$Location" space="$sector" includeplotbox="true" />
          </create_station>
          <set_loadout_level object="$station" exact="1" />
          <signal_objects object="player.galaxy" param="'init station'" param2="$station"
            param3="false" />

          <!-- Add escorts/patrol ships -->
          <signal_cue_instantly cue="CreatePlayerShips" param="table[
            $Sector = $sector,
            $Number = 38,
            $PilotFaction = faction.galempire,
            $PilotTag = tag.fighterpilot,
            $ShipTag = [tag.military, tag.tief],
            $Size = class.ship_s,
            $Object = $station
          ]" />
          <!-- Add construction ship -->
          <signal_cue_instantly cue="CreatePlayerShips" param="table[
            $Sector = $sector,
            $Number = 1,
            $PilotFaction = faction.galempire,
            $PilotTag = tag.fighterpilot,
            $ShipTag = [tag.builder],
            $Size = class.ship_l,
            $Object = $station
          ]" />
          <!-- Add trader ships -->
          <signal_cue_instantly cue="CreatePlayerShips" param="table[
            $Sector = $sector,
            $Number = 1,
            $PilotFaction = faction.galempire,
            $PilotTag = tag.fighterpilot,
            $ShipTag = [tag.trader, tag.container],
            $Size = class.ship_l,
            $Object = $station
          ]" />
          <signal_cue_instantly cue="CreatePlayerShips" param="table[
            $Sector = $sector,
            $Number = 2,
            $PilotFaction = faction.galempire,
            $PilotTag = tag.fighterpilot,
            $ShipTag = [tag.trader, tag.container],
            $Size = class.ship_m,
            $Object = $station
          ]" />
        </actions>
        <delay exact="1s" />
        <actions>
          <debug_text text="'OneSetup_Xfr Defense'" chance="$DebugChance" />
          <run_actions ref="md.LIB_Generic.TransferStationOwnership">
            <param name="Station" value="$station" />
            <param name="Faction" value="faction.player" />
          </run_actions>
          <signal_cue_instantly cue="Add_HomePlanet" />
        </actions>
        <cues>
          <cue name="Add_HomePlanet">
            <conditions>
              <event_cue_signalled />
            </conditions>
            <delay exact="1s" />
            <actions>
              <!-- add planetary tradestation -->
              <set_value name="$DistanceFromSectorOrigin" exact="500km" />
              <set_value name="$toObject_pos" exact="$sector.cluster.world.{$sector.cluster.planets.{1}}.position.{$sector}" />
              <include_actions ref="md.One_Sector.GetPositionBetweenSectorAndObject" />

              <get_module_set_macro result="$StationMacro" race="faction.galempire.primaryrace" type="'tradingstation'" />
              <create_station rawname="'{20777,3002}'"
                name="$station"
                state="componentstate.operational"
                sector="$sector"
                owner="faction.civilian" macro="$StationMacro"
                constructionplan="'planetary_tradestation'">
                <safepos value="$Location" space="$sector" includeplotbox="true" />
              </create_station>
              <set_loadout_level object="$station" exact="1" />
              <signal_objects object="player.galaxy" param="'init station'" param2="$station"
                param3="false" />
              <signal_cue_instantly cue="md.OneSector_PlanetaryAid.AddStation" param="table[$Station = $station, $Prefill = true]" />
            </actions>
            <delay exact="1s" />
            <actions>
              <debug_text text="'OneSetup_Xfr Station'" chance="$DebugChance" />
              <run_actions ref="md.LIB_Generic.TransferStationOwnership">
                <param name="Station" value="$station" />
                <param name="Faction" value="faction.player" />
              </run_actions>
            </actions>
          </cue>
        </cues>
      </cue>

      <cue name="CreatePlayerShips" instantiate="true">
        <conditions>
          <event_cue_signalled />
          <check_all>
            <check_value value="event.param.$Sector" />
            <check_value value="event.param.$Number" />
            <check_value value="event.param.$PilotFaction" />
            <check_value value="event.param.$PilotTag" />
            <check_any>
              <!-- required: either ShipMacro, or ShipTag and Size-->
              <check_value value="event.param.$ShipMacro" />
              <check_all>
                <check_value value="event.param.$ShipTag" />
                <check_value value="event.param.$Size" />
              </check_all>
            </check_any>
          </check_all>
        </conditions>
        <delay exact="1ms" />
        <actions>
          <debug_text text="'OneSetup_Preparing'" chance="$DebugChance" />
          <create_group groupname="$temp" />
          <debug_text text="event.param" chance="$DebugChance" />
          <signal_cue_instantly cue="Create" param="event.param" />
        </actions>
        <cues>
          <cue name="Create">
            <conditions>
              <event_cue_signalled />
            </conditions>
            <delay exact="1ms" />
            <actions>
              <set_value name="$Sector" exact="event.param.$Sector" />
              <set_value name="$Number" exact="event.param.$Number" />
              <set_value name="$PilotFaction" exact="event.param.$PilotFaction" />
              <set_value name="$PilotTag" exact="event.param.$PilotTag" />
              <!-- required: either ShipMacro, or ShipTag and Size-->
              <set_value name="$ShipMacro" exact="@event.param.$ShipMacro" />
              <set_value name="$ShipTag" exact="@event.param.$ShipTag" />
              <set_value name="$Size" exact="@event.param.$Size" />
              <!-- optional: position variables, otherwise sector is used -->
              <set_value name="$Object" exact="@event.param.$Object" />
              <set_value name="$Position" exact="@event.param.$Position" />

              <debug_text text="'OneSetup_Creating'" chance="$DebugChance" />
              <do_all exact="$Number">
                <do_if value="@$Object">
                  <get_safe_pos result="$safepos" object="$Object" sector="$Sector" />
                </do_if>
                <do_elseif value="@$Position">
                  <get_safe_pos result="$safepos" value="$Position" sector="$Sector" />
                </do_elseif>
                <do_else>
                  <get_safe_pos result="$safepos" sector="$Sector" />
                </do_else>
                <do_if value="$table.$ShipMacro">
                  <create_ship name="$ship" macro="$table.$ShipMacro" groupname="$temp" sector="$table.$Sector">
                    <pilot>
                      <select faction="$table.$PilotFaction" tags="$table.$PilotTag" />
                    </pilot>
                    <loadout>
                      <level exact="1" />
                    </loadout>
                    <safepos value="$safepos" allowyaxis="false" space="$table.$Sector" />
                  </create_ship>
                </do_if>
                <do_else>
                  <create_ship name="$ship" groupname="$temp" sector="$table.$Sector">
                    <select faction="$table.$PilotFaction" tags="$table.$ShipTag" size="$table.$Size" />
                    <pilot>
                      <select faction="$table.$PilotFaction" tags="$table.$PilotTag" />
                    </pilot>
                    <loadout>
                      <level exact="1" />
                    </loadout>
                    <safepos value="$safepos" allowyaxis="false" space="$table.$Sector" />
                  </create_ship>
                </do_else>
              </do_all>
              <signal_cue_instantly cue="Transfer" />
            </actions>
          </cue>
          <cue name="Transfer">
            <conditions>
              <event_cue_signalled />
            </conditions>
            <delay exact="1ms" />
            <actions>
              <debug_text text="'OneSetup_Transferring'" chance="$DebugChance" />
              <do_for_each name="$ship" in="$temp">
                <set_owner object="$ship" overridenpc="true" faction="faction.player" />
              </do_for_each>
              <clear_group group="$temp" />
            </actions>
          </cue>
        </cues>
      </cue>
    </cues>
  </replace>
</diff>