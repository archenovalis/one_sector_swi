<?xml version="1.0" encoding="utf-8"?>
<diff xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../xsd/mddiff.xsd">
  <replace sel="//mdscript/cues">
    <cues>
      <cue name="OneSector_Player_Start" module="one_player">
        <conditions>
          <event_cue_signalled cue="md.Setup.GameStart" />
        </conditions>
        <delay exact="5s" />
        <actions>
          <set_value name="$InitialMap" exact="[
            macro.swi_clustercrustai_sector001_macro
          ]" />

          <!-- Add player's ships to universe -->
          <set_job_active job="'player_construction_vessel_l'" />
          <set_job_active job="'player_construction_trader_l_critical'" />
          <set_job_active job="'player_construction_trader_m_critical'" />
          <set_job_active job="'player_initial_patrol_s'" />

          <!-- Add player's stations to universe -->
          <find_sector name="$sector" macro="macro.swi_clustercrustai_sector001_macro" />

          <get_module_set_macro result="$StationMacro" race="faction.galempire.primaryrace" type="'factory'" />
          <create_station rawname="'Defense Station'"
            name="$station"
            state="componentstate.operational"
            sector="$sector"
            owner="faction.galempire" macro="$StationMacro"
            constructionplan="'imperial_defence'">
            <safepos space="$sector" allowyaxis="false" includeplotbox="true" />
          </create_station>
          <set_loadout_level object="$station" exact="1" />
          <signal_objects object="player.galaxy" param="'init station'" param2="$station"
            param3="false" />
          <signal_cue_instantly cue="Give_Ownership" />
        </actions>
        <cues>
          <cue name="Give_Ownership">
            <conditions>
              <event_cue_signalled />
            </conditions>
            <delay exact="1ms" />
            <actions>
              <set_job_active job="'player_construction_vessel_l'" activate="false" />
              <set_job_active job="'player_construction_trader_l_critical'" activate="false" />
              <set_job_active job="'player_construction_trader_m_critical'" activate="false" />
              <set_job_active job="'player_initial_patrol_s'" activate="false" />
              <find_object name="$objects" space="$sector" multiple="true" class="class.station" />
              <do_for_each name="$object" in="$objects">
                <run_actions ref="md.LIB_Generic.TransferStationOwnership">
                  <param name="Station" value="$object" />
                  <param name="Faction" value="faction.player" />
                </run_actions>
              </do_for_each>
              <find_ship_by_true_owner name="$objects" faction="faction.galempire" space="$sector" multiple="true" />
              <do_for_each name="$object" in="$objects">
                <run_actions ref="md.LIB_Generic.TransferShipOwnership">
                  <param name="Ship" value="$object" />
                  <param name="Faction" value="faction.player" />
                </run_actions>
              </do_for_each>

              <!-- add all blueprints -->
              <do_for_each name="$faction" in="[
                faction.galempire, faction.newrepublic,     faction.ascendancy,
                faction.anoat,     faction.corporate,       faction.commerceguild,
                faction.mandodw,   faction.huttcartel,      faction.miningguild,
                faction.tagge,     faction.tradefederation, faction.baobab,
                faction.twinsuns,  faction.moncal,          faction.transgalmeg,
                faction.incom,     faction.rendili,         faction.hoersh,
                faction.sienar,    faction.corellia,        faction.kuat
              ]">
                <get_ware_definition result="$defs" faction="$faction" />
              </do_for_each>
              <add_blueprints wares="$defs" />

              <!-- add planetary tradestation -->
              <set_value name="$DistanceFromSectorOrigin" exact="500km" />
              <set_value name="$toObject_pos" exact="$sector.cluster.world.{$sector.cluster.planets.{1}}.position.{$sector}" />
              <include_actions ref="md.One_Sector.GetPositionBetweenSectorAndObject" />

              <get_module_set_macro result="$StationMacro" race="faction.galempire.primaryrace" type="'tradingstation'" />
              <create_station rawname="'{20777,3002}'"
                name="$station"
                state="componentstate.operational"
                sector="$sector"
                owner="faction.civilian" macro="$StationMacro"
                constructionplan="'planetary_tradestation'">
                <safepos value="$Location" space="$sector" includeplotbox="true" />
              </create_station>
              <set_loadout_level object="$station" exact="1" />
              <signal_objects object="player.galaxy" param="'init station'" param2="$station"
                param3="false" />
              <signal_cue_instantly cue="md.OneSector_PlanetaryAid.AddStation" param="table[$Station = $station, $Prefill = true]" />
            </actions>
            <delay exact="1ms" />
            <actions>
              <run_actions ref="md.LIB_Generic.TransferStationOwnership">
                <param name="Station" value="$station" />
                <param name="Faction" value="faction.player" />
              </run_actions>
            </actions>
          </cue>
        </cues>
      </cue>
    </cues>
  </replace>
</diff>