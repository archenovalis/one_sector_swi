<?xml version="1.0" encoding="utf-8"?>
<mdscript name="One_Sector"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../xsd/md.xsd">
  <cues>
    <cue name="Begin">
      <conditions>
        <check_any>
          <event_game_loaded />
          <event_game_started />
          <event_player_created />
          <event_cue_signalled cue="md.Setup.Start" />
        </check_any>
      </conditions>
      <actions>
        <set_value name="global.$OneSector" exact="this" />
        <set_value name="this.$Debug" exact="0" />
        <set_value name="$InitSetup" exact="true" />
        <create_group groupname="$PlanetaryStations" />
        <do_if value="$InitSetup" exact="true" />
      </actions>
      <cues>
        <cue name="Init">
          <conditions>
            <check_any>
              <event_game_loaded />
              <event_game_started />
              <event_player_created />
              <event_cue_signalled />
            </check_any>
            <check_value value="not @player.allmodules.{player.module}.isscenario" />
          </conditions>
          <delay exact="1ms" />
          <actions>
            <set_value name="$Debug" exact="100" />
            <do_if value="$InitSetup">
              <signal_cue_instantly cue="InitSetup" />
            </do_if>
            <do_else>
              <reset_cue cue="Init" />
            </do_else>
          </actions>
          <cues>
            <cue name="InitSetup" instantiate="true">
              <conditions>
                <event_cue_signalled />
              </conditions>
              <delay exact="1ms" />
              <actions>
                <!-- setup initial planetary stations -->
                <do_for_each name="$macro" in="[
                  macro.swi_clusternarshadda_sector001_macro,
                  macro.swi_clustereriadu_sector001_macro,
                  macro.swi_clusteranpath_sector001_macro,
                  macro.swi_clustercantonica_sector001_macro,
                  macro.swi_clusterhypori_sector001_macro,
                  macro.swi_clustermandalore_sector001_macro,
                  macro.swi_clustercoruscant_sector001_macro,
                  macro.swi_clusterlahmu_sector001_macro,
                  macro.swi_clusterhapes_sector001_macro,
                  macro.swi_clusternaboo_sector001_macro,
                  macro.swi_clusterkamino_sector001_macro,
                  macro.swi_clusterkorriban_sector001_macro
                ]">
                  <find_sector name="$sector" macro="$macro" />
                  <!-- add planetary tradestation -->
                  <set_value name="$DistanceFromSectorOrigin" exact="500km" />
                  <set_value name="$toObject_pos" exact="$sector.cluster.world.{$sector.cluster.planets.{1}}.position.{$sector}" />
                  <include_actions ref="md.One_Sector.GetPositionBetweenSectorAndObject" />

                  <get_module_set_macro result="$StationMacro" race="faction.galempire.primaryrace" type="'tradingstation'" />
                  <create_station rawname="'{20777,3002}'"
                    name="$station"
                    state="componentstate.operational"
                    sector="$sector"
                    owner="$sector.owner" macro="$StationMacro"
                    constructionplan="'planetary_tradestation'">
                    <safepos value="$Location" space="$sector" includeplotbox="true" />
                  </create_station>
                  <set_loadout_level object="$station" exact="1" />
                  <signal_objects object="player.galaxy" param="'init station'" param2="$station"
                    param3="false" />
                  <signal_cue_instantly cue="md.OneSector_PlanetaryAid.AddStation" param="table[$Station = $station, $Prefill = true]" />
                </do_for_each>
                <set_value name="$InitSetup" exact="false" />
                <reset_cue cue="parent" />
              </actions>
            </cue>
          </cues>
        </cue>
      </cues>
    </cue>

    <!-- relevant parts pulled from LIB_General.GetPositionBetweenObjects -->
    <!--
        requires:
          $sector = sector
          $toObject_pos = position
          $DistanceFromSectorOrigin = distance (150km)
        returns:
          $Location
          $Rotation (looking at toObject_pos from sector origin)
      -->
    <library name="GetPositionBetweenSectorAndObject">
      <actions>
        <!-- look at planet from sector origin -->
        <create_orientation name="$Rotation" orientation="look_at" refposition="$toObject_pos">
          <position object="$sector" space="$sector" />
        </create_orientation>
        <!-- zone position -->
        <set_value name="$FromPos" exact="position.[0m, 0m, 0m]" />
        <!-- zone location -->
        <create_position name="$Location"
          x="$FromPos.x + $DistanceFromSectorOrigin * sin($Rotation.yaw) * cos($Rotation.pitch)"
          y="$FromPos.y + $DistanceFromSectorOrigin * sin($Rotation.pitch)"
          z="$FromPos.z + $DistanceFromSectorOrigin * cos($Rotation.yaw) * cos($Rotation.pitch)"
        />
        <!-- convert back to space location -->
        <create_position name="$Location" space="$sector" object="$sector" value="$Location" />
      </actions>
    </library>
  </cues>
</mdscript>